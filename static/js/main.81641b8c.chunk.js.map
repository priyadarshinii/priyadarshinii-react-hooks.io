{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","context/auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","LoadingIndicator","IngredientForm","React","memo","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","components_UI_Card","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","loading","components_UI_LoadingIndicator","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","ErrorModal","Fragment","onClose","Search","enteredFilter","setEnteredFilter","onLoadIngredients","inputRef","useRef","useEffect","timer","setTimeout","current","queryParams","length","concat","fetch","method","headers","Content-Type","then","response","json","responseData","loadedIngredients","push","clearTimeout","ref","ingredientReducer","currentIngredients","action","toConsumableArray","ingredient","filter","ingredientId","Error","httpReducer","httpState","error","objectSpread2","errorMessage","Ingredients","_useReducer","useReducer","_useReducer2","userIngredients","dispatch","_useReducer3","_useReducer4","httpDispatch","addIngredientHandler","useCallback","body","JSON","stringify","name","removeIngredientHandler","catch","message","filterIngredientsHandler","filteredIngredients","clearError","ingredientList","useMemo","components_Ingredients_IngredientList","UI_ErrorModal","Ingredients_IngredientForm","Ingredients_Search","AuthContext","createContext","isAuth","login","AuthContextProvider","isAuthenticated","setIsAuthenticated","Provider","Auth","authContext","useContext","App","content","src_components_Auth","components_Ingredients_Ingredients","ReactDOM","render","auth_context","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.81641b8c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={event => {\n                setEnteredTitle(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const {onLoadIngredients} = props;\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n\n    const timer = setTimeout(() => {\n\n      if(enteredFilter === inputRef.current.value) {\n\n        const queryParams = (enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`)\n\n        fetch('https://react-hooks-update-2b541.firebaseio.com/ingredients.json' + queryParams, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => response.json())\n        .then(responseData => {\n  \n          const loadedIngredients = [];\n          for (let key in responseData) {\n  \n            loadedIngredients.push({\n              id: key,\n              title: responseData[key].title,\n              amount: responseData[key].amount\n            });\n          }\n          onLoadIngredients(loadedIngredients);  \n        });\n      }\n    }, 500)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [enteredFilter, onLoadIngredients])\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input ref={inputRef} type=\"text\" onChange={event => setEnteredFilter(event.target.value)} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useCallback, useReducer, useMemo } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n\n  switch(action.type) {\n\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ingredient => ingredient.id !== action.ingredientId)\n    default: throw new Error ('Should not get here!')\n    \n  }\n  \n}\n\nconst httpReducer = (httpState, action) => {\n\n  switch(action.type) {\n    case 'SEND':\n      return { loading: true, error: null}\n    case 'RESPONSE':\n      return { ...httpState, loading: false}\n    case 'ERROR':\n      return {loading: false, error: action.errorMessage}\n    case 'CLEAR':\n      return { ...httpState, error: null}\n    default: throw new Error('Should not get here');\n  }\n\n}\n\nconst Ingredients = () => {\n\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [httpState, httpDispatch] = useReducer(httpReducer, {loading: false, error: null});\n\n\n  const addIngredientHandler = useCallback(ingredient => {\n\n    httpDispatch({type: 'SEND'});\n    fetch('https://react-hooks-update-2b541.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json())\n    .then(responseData => {\n\n      httpDispatch({type: 'RESPONSE'});\n      dispatch({type: 'ADD', ingredient: { id: responseData.name, ...ingredient }});\n\n    })\n    \n  }, []);\n\n  const removeIngredientHandler = useCallback(ingredientId => {\n\n    httpDispatch({type: 'SEND'});\n    fetch(`https://react-hooks-update-2b541.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE',\n    }).then(responseData => {\n\n      httpDispatch({type: 'RESPONSE'});\n      dispatch({type: 'DELETE', ingredientId: ingredientId});\n\n    }).catch(error => {\n      httpDispatch({type: 'ERROR', errorMessage: error.message});\n    });\n  }, []);\n\n  const filterIngredientsHandler = useCallback((filteredIngredients) => {\n    dispatch({type: 'SET', ingredients: filteredIngredients});\n  }, [])\n\n  const clearError = useCallback(() => {\n    httpDispatch({type: 'CLEAR'});\n  }, [])\n\n  const ingredientList = useMemo(() => {\n    return (\n      <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />\n    )\n  }, [userIngredients, removeIngredientHandler])\n\n  return (\n    <div className=\"App\">\n      {httpState.error && <ErrorModal onClose={clearError}>{httpState.error}</ErrorModal>}\n      <IngredientForm onAddIngredient={addIngredientHandler} loading={httpState.loading} />\n\n      <section>\n        <Search onLoadIngredients={filterIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState } from  'react';\n\nexport const AuthContext = React.createContext({\n    isAuth: false,\n    login: () => {}\n})\n\nconst AuthContextProvider = props => {\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const loginHandler = () => {\n        setIsAuthenticated(true);\n    }\n\n    return (\n        <AuthContext.Provider value={{login: loginHandler, isAuth: isAuthenticated}}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider;","import React, { useContext } from 'react';\n\nimport Card from './UI/Card';\nimport { AuthContext } from '../context/auth-context';\nimport './Auth.css';\n\nconst Auth = props => {\n\n  const authContext = useContext(AuthContext);\n  const loginHandler = () => {\n    authContext.login();\n  };\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />\n\n  if(authContext.isAuth)\n    content = <Ingredients />;\n\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthContextProvider from './context/auth-context';\n\nReactDOM.render(<AuthContextProvider><App /></AuthContextProvider>, document.getElementById('root'));"],"sourceRoot":""}